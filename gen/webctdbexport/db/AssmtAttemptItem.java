package webctdbexport.db;
// Generated 17-Jun-2011 11:38:57 by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.sql.Clob;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * AssmtAttemptItem generated by hbm2java
 */
@Entity
@Table(name="ASSMT_ATTEMPT_ITEM"
)
public class AssmtAttemptItem  implements java.io.Serializable {


     private BigDecimal id;
     private AssmtQuestionLink assmtQuestionLink;
     private AssmtAttempt assmtAttempt;
     private int position;
     private BigDecimal randomSeed;
     private boolean modifiedFlag;
     private boolean visitedFlag;
     private BigDecimal createTs;
     private BigDecimal lastmodifyTs;
     private BigDecimal score;
     private BigDecimal initialScore;
     private Clob comments;
     private Set<AssmtAttemptEvent> assmtAttemptEvents = new HashSet<AssmtAttemptEvent>(0);
     private Set<AssmtResponse> assmtResponses = new HashSet<AssmtResponse>(0);

    public AssmtAttemptItem() {
    }

	
    public AssmtAttemptItem(BigDecimal id, AssmtQuestionLink assmtQuestionLink, AssmtAttempt assmtAttempt, int position, BigDecimal randomSeed, boolean modifiedFlag, boolean visitedFlag, BigDecimal createTs, BigDecimal lastmodifyTs) {
        this.id = id;
        this.assmtQuestionLink = assmtQuestionLink;
        this.assmtAttempt = assmtAttempt;
        this.position = position;
        this.randomSeed = randomSeed;
        this.modifiedFlag = modifiedFlag;
        this.visitedFlag = visitedFlag;
        this.createTs = createTs;
        this.lastmodifyTs = lastmodifyTs;
    }
    public AssmtAttemptItem(BigDecimal id, AssmtQuestionLink assmtQuestionLink, AssmtAttempt assmtAttempt, int position, BigDecimal randomSeed, boolean modifiedFlag, boolean visitedFlag, BigDecimal createTs, BigDecimal lastmodifyTs, BigDecimal score, BigDecimal initialScore, Clob comments, Set<AssmtAttemptEvent> assmtAttemptEvents, Set<AssmtResponse> assmtResponses) {
       this.id = id;
       this.assmtQuestionLink = assmtQuestionLink;
       this.assmtAttempt = assmtAttempt;
       this.position = position;
       this.randomSeed = randomSeed;
       this.modifiedFlag = modifiedFlag;
       this.visitedFlag = visitedFlag;
       this.createTs = createTs;
       this.lastmodifyTs = lastmodifyTs;
       this.score = score;
       this.initialScore = initialScore;
       this.comments = comments;
       this.assmtAttemptEvents = assmtAttemptEvents;
       this.assmtResponses = assmtResponses;
    }
   
     @Id 

    
    @Column(name="ID", nullable=false, precision=20, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="QUESTION_LINK_ID", nullable=false)
    public AssmtQuestionLink getAssmtQuestionLink() {
        return this.assmtQuestionLink;
    }
    
    public void setAssmtQuestionLink(AssmtQuestionLink assmtQuestionLink) {
        this.assmtQuestionLink = assmtQuestionLink;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ATTEMPT_ID", nullable=false)
    public AssmtAttempt getAssmtAttempt() {
        return this.assmtAttempt;
    }
    
    public void setAssmtAttempt(AssmtAttempt assmtAttempt) {
        this.assmtAttempt = assmtAttempt;
    }

    
    @Column(name="POSITION", nullable=false, precision=8, scale=0)
    public int getPosition() {
        return this.position;
    }
    
    public void setPosition(int position) {
        this.position = position;
    }

    
    @Column(name="RANDOM_SEED", nullable=false, precision=20, scale=0)
    public BigDecimal getRandomSeed() {
        return this.randomSeed;
    }
    
    public void setRandomSeed(BigDecimal randomSeed) {
        this.randomSeed = randomSeed;
    }

    
    @Column(name="MODIFIED_FLAG", nullable=false, precision=1, scale=0)
    public boolean isModifiedFlag() {
        return this.modifiedFlag;
    }
    
    public void setModifiedFlag(boolean modifiedFlag) {
        this.modifiedFlag = modifiedFlag;
    }

    
    @Column(name="VISITED_FLAG", nullable=false, precision=1, scale=0)
    public boolean isVisitedFlag() {
        return this.visitedFlag;
    }
    
    public void setVisitedFlag(boolean visitedFlag) {
        this.visitedFlag = visitedFlag;
    }

    
    @Column(name="CREATE_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getCreateTs() {
        return this.createTs;
    }
    
    public void setCreateTs(BigDecimal createTs) {
        this.createTs = createTs;
    }

    
    @Column(name="LASTMODIFY_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getLastmodifyTs() {
        return this.lastmodifyTs;
    }
    
    public void setLastmodifyTs(BigDecimal lastmodifyTs) {
        this.lastmodifyTs = lastmodifyTs;
    }

    
    @Column(name="SCORE", precision=9, scale=4)
    public BigDecimal getScore() {
        return this.score;
    }
    
    public void setScore(BigDecimal score) {
        this.score = score;
    }

    
    @Column(name="INITIAL_SCORE", precision=9, scale=4)
    public BigDecimal getInitialScore() {
        return this.initialScore;
    }
    
    public void setInitialScore(BigDecimal initialScore) {
        this.initialScore = initialScore;
    }

    
    @Column(name="COMMENTS")
    public Clob getComments() {
        return this.comments;
    }
    
    public void setComments(Clob comments) {
        this.comments = comments;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="assmtAttemptItem")
    public Set<AssmtAttemptEvent> getAssmtAttemptEvents() {
        return this.assmtAttemptEvents;
    }
    
    public void setAssmtAttemptEvents(Set<AssmtAttemptEvent> assmtAttemptEvents) {
        this.assmtAttemptEvents = assmtAttemptEvents;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="assmtAttemptItem")
    public Set<AssmtResponse> getAssmtResponses() {
        return this.assmtResponses;
    }
    
    public void setAssmtResponses(Set<AssmtResponse> assmtResponses) {
        this.assmtResponses = assmtResponses;
    }




}


