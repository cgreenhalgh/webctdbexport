package webctdbexport.db;
// Generated 17-Jun-2011 11:38:57 by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * PersonQuery generated by hbm2java
 */
@Entity
@Table(name="PERSON_QUERY"
)
public class PersonQuery  implements java.io.Serializable {


     private BigDecimal id;
     private LearningContext learningContext;
     private BigDecimal createTs;
     private BigDecimal lastmodifyTs;
     private String title;
     private Set<PersonQueryCriteria> personQueryCriterias = new HashSet<PersonQueryCriteria>(0);
     private Set<PersonQuerySelect> personQuerySelects = new HashSet<PersonQuerySelect>(0);

    public PersonQuery() {
    }

	
    public PersonQuery(BigDecimal id, LearningContext learningContext, BigDecimal createTs, BigDecimal lastmodifyTs) {
        this.id = id;
        this.learningContext = learningContext;
        this.createTs = createTs;
        this.lastmodifyTs = lastmodifyTs;
    }
    public PersonQuery(BigDecimal id, LearningContext learningContext, BigDecimal createTs, BigDecimal lastmodifyTs, String title, Set<PersonQueryCriteria> personQueryCriterias, Set<PersonQuerySelect> personQuerySelects) {
       this.id = id;
       this.learningContext = learningContext;
       this.createTs = createTs;
       this.lastmodifyTs = lastmodifyTs;
       this.title = title;
       this.personQueryCriterias = personQueryCriterias;
       this.personQuerySelects = personQuerySelects;
    }
   
     @Id 

    
    @Column(name="ID", nullable=false, precision=20, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="LEARNING_CONTEXT_ID", nullable=false)
    public LearningContext getLearningContext() {
        return this.learningContext;
    }
    
    public void setLearningContext(LearningContext learningContext) {
        this.learningContext = learningContext;
    }

    
    @Column(name="CREATE_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getCreateTs() {
        return this.createTs;
    }
    
    public void setCreateTs(BigDecimal createTs) {
        this.createTs = createTs;
    }

    
    @Column(name="LASTMODIFY_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getLastmodifyTs() {
        return this.lastmodifyTs;
    }
    
    public void setLastmodifyTs(BigDecimal lastmodifyTs) {
        this.lastmodifyTs = lastmodifyTs;
    }

    
    @Column(name="TITLE", length=800)
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="personQuery")
    public Set<PersonQueryCriteria> getPersonQueryCriterias() {
        return this.personQueryCriterias;
    }
    
    public void setPersonQueryCriterias(Set<PersonQueryCriteria> personQueryCriterias) {
        this.personQueryCriterias = personQueryCriterias;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="personQuery")
    public Set<PersonQuerySelect> getPersonQuerySelects() {
        return this.personQuerySelects;
    }
    
    public void setPersonQuerySelects(Set<PersonQuerySelect> personQuerySelects) {
        this.personQuerySelects = personQuerySelects;
    }




}


