package webctdbexport.db;
// Generated 17-Jun-2011 11:38:57 by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TrkSession generated by hbm2java
 */
@Entity
@Table(name="TRK_SESSION"
)
public class TrkSession  implements java.io.Serializable {


     private BigDecimal id;
     private TrkUserAction trkUserActionByLastActionId;
     private TrkUserAction trkUserActionByFirstActionId;
     private String httpSessionId;
     private boolean dirty;
     private Set<TrkUserAction> trkUserActions = new HashSet<TrkUserAction>(0);
     private Set<TrkSessionToolActivity> trkSessionToolActivities = new HashSet<TrkSessionToolActivity>(0);
     private Set<TrkSessionContextActivity> trkSessionContextActivities = new HashSet<TrkSessionContextActivity>(0);

    public TrkSession() {
    }

	
    public TrkSession(BigDecimal id, String httpSessionId, boolean dirty) {
        this.id = id;
        this.httpSessionId = httpSessionId;
        this.dirty = dirty;
    }
    public TrkSession(BigDecimal id, TrkUserAction trkUserActionByLastActionId, TrkUserAction trkUserActionByFirstActionId, String httpSessionId, boolean dirty, Set<TrkUserAction> trkUserActions, Set<TrkSessionToolActivity> trkSessionToolActivities, Set<TrkSessionContextActivity> trkSessionContextActivities) {
       this.id = id;
       this.trkUserActionByLastActionId = trkUserActionByLastActionId;
       this.trkUserActionByFirstActionId = trkUserActionByFirstActionId;
       this.httpSessionId = httpSessionId;
       this.dirty = dirty;
       this.trkUserActions = trkUserActions;
       this.trkSessionToolActivities = trkSessionToolActivities;
       this.trkSessionContextActivities = trkSessionContextActivities;
    }
   
     @Id 

    
    @Column(name="ID", nullable=false, precision=20, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="LAST_ACTION_ID")
    public TrkUserAction getTrkUserActionByLastActionId() {
        return this.trkUserActionByLastActionId;
    }
    
    public void setTrkUserActionByLastActionId(TrkUserAction trkUserActionByLastActionId) {
        this.trkUserActionByLastActionId = trkUserActionByLastActionId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="FIRST_ACTION_ID")
    public TrkUserAction getTrkUserActionByFirstActionId() {
        return this.trkUserActionByFirstActionId;
    }
    
    public void setTrkUserActionByFirstActionId(TrkUserAction trkUserActionByFirstActionId) {
        this.trkUserActionByFirstActionId = trkUserActionByFirstActionId;
    }

    
    @Column(name="HTTP_SESSION_ID", unique=true, nullable=false, length=900)
    public String getHttpSessionId() {
        return this.httpSessionId;
    }
    
    public void setHttpSessionId(String httpSessionId) {
        this.httpSessionId = httpSessionId;
    }

    
    @Column(name="DIRTY", nullable=false, precision=1, scale=0)
    public boolean isDirty() {
        return this.dirty;
    }
    
    public void setDirty(boolean dirty) {
        this.dirty = dirty;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="trkSession")
    public Set<TrkUserAction> getTrkUserActions() {
        return this.trkUserActions;
    }
    
    public void setTrkUserActions(Set<TrkUserAction> trkUserActions) {
        this.trkUserActions = trkUserActions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="trkSession")
    public Set<TrkSessionToolActivity> getTrkSessionToolActivities() {
        return this.trkSessionToolActivities;
    }
    
    public void setTrkSessionToolActivities(Set<TrkSessionToolActivity> trkSessionToolActivities) {
        this.trkSessionToolActivities = trkSessionToolActivities;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="trkSession")
    public Set<TrkSessionContextActivity> getTrkSessionContextActivities() {
        return this.trkSessionContextActivities;
    }
    
    public void setTrkSessionContextActivities(Set<TrkSessionContextActivity> trkSessionContextActivities) {
        this.trkSessionContextActivities = trkSessionContextActivities;
    }




}


