package webctdbexport.db;
// Generated 17-Jun-2011 11:38:57 by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * AssmtSecuritySetting generated by hbm2java
 */
@Entity
@Table(name="ASSMT_SECURITY_SETTING"
)
public class AssmtSecuritySetting  implements java.io.Serializable {


     private BigDecimal id;
     private AssmtSetting assmtSetting;
     private String securityaddress;
     private String securityaddressmask;
     private BigDecimal createTs;
     private BigDecimal lastmodifyTs;
     private String securitypassword;
     private boolean requiresecurebrowser;

    public AssmtSecuritySetting() {
    }

	
    public AssmtSecuritySetting(AssmtSetting assmtSetting, String securityaddress, String securityaddressmask, BigDecimal createTs, BigDecimal lastmodifyTs, boolean requiresecurebrowser) {
        this.assmtSetting = assmtSetting;
        this.securityaddress = securityaddress;
        this.securityaddressmask = securityaddressmask;
        this.createTs = createTs;
        this.lastmodifyTs = lastmodifyTs;
        this.requiresecurebrowser = requiresecurebrowser;
    }
    public AssmtSecuritySetting(AssmtSetting assmtSetting, String securityaddress, String securityaddressmask, BigDecimal createTs, BigDecimal lastmodifyTs, String securitypassword, boolean requiresecurebrowser) {
       this.assmtSetting = assmtSetting;
       this.securityaddress = securityaddress;
       this.securityaddressmask = securityaddressmask;
       this.createTs = createTs;
       this.lastmodifyTs = lastmodifyTs;
       this.securitypassword = securitypassword;
       this.requiresecurebrowser = requiresecurebrowser;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="assmtSetting"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="ID", nullable=false, precision=20, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@OneToOne(fetch=FetchType.LAZY)
    public AssmtSetting getAssmtSetting() {
        return this.assmtSetting;
    }
    
    public void setAssmtSetting(AssmtSetting assmtSetting) {
        this.assmtSetting = assmtSetting;
    }

    
    @Column(name="SECURITYADDRESS", nullable=false, length=15)
    public String getSecurityaddress() {
        return this.securityaddress;
    }
    
    public void setSecurityaddress(String securityaddress) {
        this.securityaddress = securityaddress;
    }

    
    @Column(name="SECURITYADDRESSMASK", nullable=false, length=15)
    public String getSecurityaddressmask() {
        return this.securityaddressmask;
    }
    
    public void setSecurityaddressmask(String securityaddressmask) {
        this.securityaddressmask = securityaddressmask;
    }

    
    @Column(name="CREATE_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getCreateTs() {
        return this.createTs;
    }
    
    public void setCreateTs(BigDecimal createTs) {
        this.createTs = createTs;
    }

    
    @Column(name="LASTMODIFY_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getLastmodifyTs() {
        return this.lastmodifyTs;
    }
    
    public void setLastmodifyTs(BigDecimal lastmodifyTs) {
        this.lastmodifyTs = lastmodifyTs;
    }

    
    @Column(name="SECURITYPASSWORD", length=300)
    public String getSecuritypassword() {
        return this.securitypassword;
    }
    
    public void setSecuritypassword(String securitypassword) {
        this.securitypassword = securitypassword;
    }

    
    @Column(name="REQUIRESECUREBROWSER", nullable=false, precision=1, scale=0)
    public boolean isRequiresecurebrowser() {
        return this.requiresecurebrowser;
    }
    
    public void setRequiresecurebrowser(boolean requiresecurebrowser) {
        this.requiresecurebrowser = requiresecurebrowser;
    }




}


