package webctdbexport.db;
// Generated 17-Jun-2011 11:38:57 by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * CwbChatroom generated by hbm2java
 */
@Entity
@Table(name="CWB_CHATROOM"
)
public class CwbChatroom  implements java.io.Serializable {


     private BigDecimal id;
     private CmsContentEntry cmsContentEntry;
     private boolean tooloption;
     private boolean allowToggle;
     private boolean allowPrivateMessage;
     private boolean allowAlias;
     private boolean allowLogging;
     private boolean descHtmlEnable;
     private BigDecimal createTs;
     private BigDecimal lastmodifyTs;
     private Integer maxUsers;
     private BigDecimal creationDate;
     private BigDecimal modificationDate;
     private String createdbyuser;
     private Set<CwbActivechatuser> cwbActivechatusers = new HashSet<CwbActivechatuser>(0);
     private Set<CwbChatroomlog> cwbChatroomlogs = new HashSet<CwbChatroomlog>(0);
     private Set<CwbGraphiccommand> cwbGraphiccommands = new HashSet<CwbGraphiccommand>(0);

    public CwbChatroom() {
    }

	
    public CwbChatroom(CmsContentEntry cmsContentEntry, boolean tooloption, boolean allowToggle, boolean allowPrivateMessage, boolean allowAlias, boolean allowLogging, boolean descHtmlEnable, BigDecimal createTs, BigDecimal lastmodifyTs) {
        this.cmsContentEntry = cmsContentEntry;
        this.tooloption = tooloption;
        this.allowToggle = allowToggle;
        this.allowPrivateMessage = allowPrivateMessage;
        this.allowAlias = allowAlias;
        this.allowLogging = allowLogging;
        this.descHtmlEnable = descHtmlEnable;
        this.createTs = createTs;
        this.lastmodifyTs = lastmodifyTs;
    }
    public CwbChatroom(CmsContentEntry cmsContentEntry, boolean tooloption, boolean allowToggle, boolean allowPrivateMessage, boolean allowAlias, boolean allowLogging, boolean descHtmlEnable, BigDecimal createTs, BigDecimal lastmodifyTs, Integer maxUsers, BigDecimal creationDate, BigDecimal modificationDate, String createdbyuser, Set<CwbActivechatuser> cwbActivechatusers, Set<CwbChatroomlog> cwbChatroomlogs, Set<CwbGraphiccommand> cwbGraphiccommands) {
       this.cmsContentEntry = cmsContentEntry;
       this.tooloption = tooloption;
       this.allowToggle = allowToggle;
       this.allowPrivateMessage = allowPrivateMessage;
       this.allowAlias = allowAlias;
       this.allowLogging = allowLogging;
       this.descHtmlEnable = descHtmlEnable;
       this.createTs = createTs;
       this.lastmodifyTs = lastmodifyTs;
       this.maxUsers = maxUsers;
       this.creationDate = creationDate;
       this.modificationDate = modificationDate;
       this.createdbyuser = createdbyuser;
       this.cwbActivechatusers = cwbActivechatusers;
       this.cwbChatroomlogs = cwbChatroomlogs;
       this.cwbGraphiccommands = cwbGraphiccommands;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="cmsContentEntry"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="ID", nullable=false, precision=20, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@OneToOne(fetch=FetchType.LAZY)
    public CmsContentEntry getCmsContentEntry() {
        return this.cmsContentEntry;
    }
    
    public void setCmsContentEntry(CmsContentEntry cmsContentEntry) {
        this.cmsContentEntry = cmsContentEntry;
    }

    
    @Column(name="TOOLOPTION", nullable=false, precision=1, scale=0)
    public boolean isTooloption() {
        return this.tooloption;
    }
    
    public void setTooloption(boolean tooloption) {
        this.tooloption = tooloption;
    }

    
    @Column(name="ALLOW_TOGGLE", nullable=false, precision=1, scale=0)
    public boolean isAllowToggle() {
        return this.allowToggle;
    }
    
    public void setAllowToggle(boolean allowToggle) {
        this.allowToggle = allowToggle;
    }

    
    @Column(name="ALLOW_PRIVATE_MESSAGE", nullable=false, precision=1, scale=0)
    public boolean isAllowPrivateMessage() {
        return this.allowPrivateMessage;
    }
    
    public void setAllowPrivateMessage(boolean allowPrivateMessage) {
        this.allowPrivateMessage = allowPrivateMessage;
    }

    
    @Column(name="ALLOW_ALIAS", nullable=false, precision=1, scale=0)
    public boolean isAllowAlias() {
        return this.allowAlias;
    }
    
    public void setAllowAlias(boolean allowAlias) {
        this.allowAlias = allowAlias;
    }

    
    @Column(name="ALLOW_LOGGING", nullable=false, precision=1, scale=0)
    public boolean isAllowLogging() {
        return this.allowLogging;
    }
    
    public void setAllowLogging(boolean allowLogging) {
        this.allowLogging = allowLogging;
    }

    
    @Column(name="DESC_HTML_ENABLE", nullable=false, precision=1, scale=0)
    public boolean isDescHtmlEnable() {
        return this.descHtmlEnable;
    }
    
    public void setDescHtmlEnable(boolean descHtmlEnable) {
        this.descHtmlEnable = descHtmlEnable;
    }

    
    @Column(name="CREATE_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getCreateTs() {
        return this.createTs;
    }
    
    public void setCreateTs(BigDecimal createTs) {
        this.createTs = createTs;
    }

    
    @Column(name="LASTMODIFY_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getLastmodifyTs() {
        return this.lastmodifyTs;
    }
    
    public void setLastmodifyTs(BigDecimal lastmodifyTs) {
        this.lastmodifyTs = lastmodifyTs;
    }

    
    @Column(name="MAX_USERS", precision=5, scale=0)
    public Integer getMaxUsers() {
        return this.maxUsers;
    }
    
    public void setMaxUsers(Integer maxUsers) {
        this.maxUsers = maxUsers;
    }

    
    @Column(name="CREATION_DATE", precision=20, scale=0)
    public BigDecimal getCreationDate() {
        return this.creationDate;
    }
    
    public void setCreationDate(BigDecimal creationDate) {
        this.creationDate = creationDate;
    }

    
    @Column(name="MODIFICATION_DATE", precision=20, scale=0)
    public BigDecimal getModificationDate() {
        return this.modificationDate;
    }
    
    public void setModificationDate(BigDecimal modificationDate) {
        this.modificationDate = modificationDate;
    }

    
    @Column(name="CREATEDBYUSER", length=256)
    public String getCreatedbyuser() {
        return this.createdbyuser;
    }
    
    public void setCreatedbyuser(String createdbyuser) {
        this.createdbyuser = createdbyuser;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cwbChatroom")
    public Set<CwbActivechatuser> getCwbActivechatusers() {
        return this.cwbActivechatusers;
    }
    
    public void setCwbActivechatusers(Set<CwbActivechatuser> cwbActivechatusers) {
        this.cwbActivechatusers = cwbActivechatusers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cwbChatroom")
    public Set<CwbChatroomlog> getCwbChatroomlogs() {
        return this.cwbChatroomlogs;
    }
    
    public void setCwbChatroomlogs(Set<CwbChatroomlog> cwbChatroomlogs) {
        this.cwbChatroomlogs = cwbChatroomlogs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cwbChatroom")
    public Set<CwbGraphiccommand> getCwbGraphiccommands() {
        return this.cwbGraphiccommands;
    }
    
    public void setCwbGraphiccommands(Set<CwbGraphiccommand> cwbGraphiccommands) {
        this.cwbGraphiccommands = cwbGraphiccommands;
    }




}


