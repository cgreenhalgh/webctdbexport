package webctdbexport.db;
// Generated 17-Jun-2011 11:38:57 by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.sql.Blob;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * SettingsDescription generated by hbm2java
 */
@Entity
@Table(name="SETTINGS_DESCRIPTION"
)
public class SettingsDescription  implements java.io.Serializable {


     private BigDecimal id;
     private SettingsGroup settingsGroup;
     private String name;
     private byte dataType;
     private byte presentationType;
     private boolean inheritableFlag;
     private boolean optionalFlag;
     private boolean readOnlyFlag;
     private BigDecimal createTs;
     private BigDecimal lastmodifyTs;
     private Boolean hiddenFlag;
     private String defaultValue;
     private String label;
     private Blob defaultValueBlob;
     private Set<SmsRoleBasedRestrictions> smsRoleBasedRestrictionses = new HashSet<SmsRoleBasedRestrictions>(0);
     private Set<SettingsLcTypeException> settingsLcTypeExceptions = new HashSet<SettingsLcTypeException>(0);
     private SettingsDescRanges settingsDescRanges;
     private Set<Settings> settingses = new HashSet<Settings>(0);

    public SettingsDescription() {
    }

	
    public SettingsDescription(BigDecimal id, SettingsGroup settingsGroup, String name, byte dataType, byte presentationType, boolean inheritableFlag, boolean optionalFlag, boolean readOnlyFlag, BigDecimal createTs, BigDecimal lastmodifyTs) {
        this.id = id;
        this.settingsGroup = settingsGroup;
        this.name = name;
        this.dataType = dataType;
        this.presentationType = presentationType;
        this.inheritableFlag = inheritableFlag;
        this.optionalFlag = optionalFlag;
        this.readOnlyFlag = readOnlyFlag;
        this.createTs = createTs;
        this.lastmodifyTs = lastmodifyTs;
    }
    public SettingsDescription(BigDecimal id, SettingsGroup settingsGroup, String name, byte dataType, byte presentationType, boolean inheritableFlag, boolean optionalFlag, boolean readOnlyFlag, BigDecimal createTs, BigDecimal lastmodifyTs, Boolean hiddenFlag, String defaultValue, String label, Blob defaultValueBlob, Set<SmsRoleBasedRestrictions> smsRoleBasedRestrictionses, Set<SettingsLcTypeException> settingsLcTypeExceptions, SettingsDescRanges settingsDescRanges, Set<Settings> settingses) {
       this.id = id;
       this.settingsGroup = settingsGroup;
       this.name = name;
       this.dataType = dataType;
       this.presentationType = presentationType;
       this.inheritableFlag = inheritableFlag;
       this.optionalFlag = optionalFlag;
       this.readOnlyFlag = readOnlyFlag;
       this.createTs = createTs;
       this.lastmodifyTs = lastmodifyTs;
       this.hiddenFlag = hiddenFlag;
       this.defaultValue = defaultValue;
       this.label = label;
       this.defaultValueBlob = defaultValueBlob;
       this.smsRoleBasedRestrictionses = smsRoleBasedRestrictionses;
       this.settingsLcTypeExceptions = settingsLcTypeExceptions;
       this.settingsDescRanges = settingsDescRanges;
       this.settingses = settingses;
    }
   
     @Id 

    
    @Column(name="ID", nullable=false, precision=20, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="GROUP_ID", nullable=false)
    public SettingsGroup getSettingsGroup() {
        return this.settingsGroup;
    }
    
    public void setSettingsGroup(SettingsGroup settingsGroup) {
        this.settingsGroup = settingsGroup;
    }

    
    @Column(name="NAME", nullable=false, length=1000)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="DATA_TYPE", nullable=false, precision=2, scale=0)
    public byte getDataType() {
        return this.dataType;
    }
    
    public void setDataType(byte dataType) {
        this.dataType = dataType;
    }

    
    @Column(name="PRESENTATION_TYPE", nullable=false, precision=2, scale=0)
    public byte getPresentationType() {
        return this.presentationType;
    }
    
    public void setPresentationType(byte presentationType) {
        this.presentationType = presentationType;
    }

    
    @Column(name="INHERITABLE_FLAG", nullable=false, precision=1, scale=0)
    public boolean isInheritableFlag() {
        return this.inheritableFlag;
    }
    
    public void setInheritableFlag(boolean inheritableFlag) {
        this.inheritableFlag = inheritableFlag;
    }

    
    @Column(name="OPTIONAL_FLAG", nullable=false, precision=1, scale=0)
    public boolean isOptionalFlag() {
        return this.optionalFlag;
    }
    
    public void setOptionalFlag(boolean optionalFlag) {
        this.optionalFlag = optionalFlag;
    }

    
    @Column(name="READ_ONLY_FLAG", nullable=false, precision=1, scale=0)
    public boolean isReadOnlyFlag() {
        return this.readOnlyFlag;
    }
    
    public void setReadOnlyFlag(boolean readOnlyFlag) {
        this.readOnlyFlag = readOnlyFlag;
    }

    
    @Column(name="CREATE_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getCreateTs() {
        return this.createTs;
    }
    
    public void setCreateTs(BigDecimal createTs) {
        this.createTs = createTs;
    }

    
    @Column(name="LASTMODIFY_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getLastmodifyTs() {
        return this.lastmodifyTs;
    }
    
    public void setLastmodifyTs(BigDecimal lastmodifyTs) {
        this.lastmodifyTs = lastmodifyTs;
    }

    
    @Column(name="HIDDEN_FLAG", precision=1, scale=0)
    public Boolean getHiddenFlag() {
        return this.hiddenFlag;
    }
    
    public void setHiddenFlag(Boolean hiddenFlag) {
        this.hiddenFlag = hiddenFlag;
    }

    
    @Column(name="DEFAULT_VALUE", length=1000)
    public String getDefaultValue() {
        return this.defaultValue;
    }
    
    public void setDefaultValue(String defaultValue) {
        this.defaultValue = defaultValue;
    }

    
    @Column(name="LABEL", length=1000)
    public String getLabel() {
        return this.label;
    }
    
    public void setLabel(String label) {
        this.label = label;
    }

    
    @Column(name="DEFAULT_VALUE_BLOB")
    public Blob getDefaultValueBlob() {
        return this.defaultValueBlob;
    }
    
    public void setDefaultValueBlob(Blob defaultValueBlob) {
        this.defaultValueBlob = defaultValueBlob;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="settingsDescription")
    public Set<SmsRoleBasedRestrictions> getSmsRoleBasedRestrictionses() {
        return this.smsRoleBasedRestrictionses;
    }
    
    public void setSmsRoleBasedRestrictionses(Set<SmsRoleBasedRestrictions> smsRoleBasedRestrictionses) {
        this.smsRoleBasedRestrictionses = smsRoleBasedRestrictionses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="settingsDescription")
    public Set<SettingsLcTypeException> getSettingsLcTypeExceptions() {
        return this.settingsLcTypeExceptions;
    }
    
    public void setSettingsLcTypeExceptions(Set<SettingsLcTypeException> settingsLcTypeExceptions) {
        this.settingsLcTypeExceptions = settingsLcTypeExceptions;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="settingsDescription")
    public SettingsDescRanges getSettingsDescRanges() {
        return this.settingsDescRanges;
    }
    
    public void setSettingsDescRanges(SettingsDescRanges settingsDescRanges) {
        this.settingsDescRanges = settingsDescRanges;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="settingsDescription")
    public Set<Settings> getSettingses() {
        return this.settingses;
    }
    
    public void setSettingses(Set<Settings> settingses) {
        this.settingses = settingses;
    }




}


