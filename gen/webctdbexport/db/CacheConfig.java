package webctdbexport.db;
// Generated 17-Jun-2011 11:38:57 by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * CacheConfig generated by hbm2java
 */
@Entity
@Table(name="CACHE_CONFIG"
)
public class CacheConfig  implements java.io.Serializable {


     private BigDecimal id;
     private String name;
     private int maxObjects;
     private BigDecimal maxMemoryIdle;
     private BigDecimal shrinkerInterval;
     private BigDecimal maxLife;
     private boolean localCache;
     private String stateVerifier;
     private boolean sendBeforeCommit;
     private BigDecimal createTs;
     private BigDecimal lastUpdateTs;
     private String cacheCategory;
     private Character useMemoryShrinker;
     private Character cloneObjects;
     private Character useDisc;
     private Character useLateral;
     private Character useSynchGroups;
     private Character useGroupsAsRelations;
     private String loaderClass;
     private boolean schemaConsistent;

    public CacheConfig() {
    }

	
    public CacheConfig(BigDecimal id, String name, int maxObjects, BigDecimal maxMemoryIdle, BigDecimal shrinkerInterval, BigDecimal maxLife, boolean localCache, boolean sendBeforeCommit, boolean schemaConsistent) {
        this.id = id;
        this.name = name;
        this.maxObjects = maxObjects;
        this.maxMemoryIdle = maxMemoryIdle;
        this.shrinkerInterval = shrinkerInterval;
        this.maxLife = maxLife;
        this.localCache = localCache;
        this.sendBeforeCommit = sendBeforeCommit;
        this.schemaConsistent = schemaConsistent;
    }
    public CacheConfig(BigDecimal id, String name, int maxObjects, BigDecimal maxMemoryIdle, BigDecimal shrinkerInterval, BigDecimal maxLife, boolean localCache, String stateVerifier, boolean sendBeforeCommit, BigDecimal createTs, BigDecimal lastUpdateTs, String cacheCategory, Character useMemoryShrinker, Character cloneObjects, Character useDisc, Character useLateral, Character useSynchGroups, Character useGroupsAsRelations, String loaderClass, boolean schemaConsistent) {
       this.id = id;
       this.name = name;
       this.maxObjects = maxObjects;
       this.maxMemoryIdle = maxMemoryIdle;
       this.shrinkerInterval = shrinkerInterval;
       this.maxLife = maxLife;
       this.localCache = localCache;
       this.stateVerifier = stateVerifier;
       this.sendBeforeCommit = sendBeforeCommit;
       this.createTs = createTs;
       this.lastUpdateTs = lastUpdateTs;
       this.cacheCategory = cacheCategory;
       this.useMemoryShrinker = useMemoryShrinker;
       this.cloneObjects = cloneObjects;
       this.useDisc = useDisc;
       this.useLateral = useLateral;
       this.useSynchGroups = useSynchGroups;
       this.useGroupsAsRelations = useGroupsAsRelations;
       this.loaderClass = loaderClass;
       this.schemaConsistent = schemaConsistent;
    }
   
     @Id 

    
    @Column(name="ID", nullable=false, precision=20, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

    
    @Column(name="NAME", unique=true, nullable=false, length=300)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="MAX_OBJECTS", nullable=false, precision=8, scale=0)
    public int getMaxObjects() {
        return this.maxObjects;
    }
    
    public void setMaxObjects(int maxObjects) {
        this.maxObjects = maxObjects;
    }

    
    @Column(name="MAX_MEMORY_IDLE", nullable=false, precision=20, scale=0)
    public BigDecimal getMaxMemoryIdle() {
        return this.maxMemoryIdle;
    }
    
    public void setMaxMemoryIdle(BigDecimal maxMemoryIdle) {
        this.maxMemoryIdle = maxMemoryIdle;
    }

    
    @Column(name="SHRINKER_INTERVAL", nullable=false, precision=20, scale=0)
    public BigDecimal getShrinkerInterval() {
        return this.shrinkerInterval;
    }
    
    public void setShrinkerInterval(BigDecimal shrinkerInterval) {
        this.shrinkerInterval = shrinkerInterval;
    }

    
    @Column(name="MAX_LIFE", nullable=false, precision=20, scale=0)
    public BigDecimal getMaxLife() {
        return this.maxLife;
    }
    
    public void setMaxLife(BigDecimal maxLife) {
        this.maxLife = maxLife;
    }

    
    @Column(name="LOCAL_CACHE", nullable=false, precision=1, scale=0)
    public boolean isLocalCache() {
        return this.localCache;
    }
    
    public void setLocalCache(boolean localCache) {
        this.localCache = localCache;
    }

    
    @Column(name="STATE_VERIFIER", length=2000)
    public String getStateVerifier() {
        return this.stateVerifier;
    }
    
    public void setStateVerifier(String stateVerifier) {
        this.stateVerifier = stateVerifier;
    }

    
    @Column(name="SEND_BEFORE_COMMIT", nullable=false, precision=1, scale=0)
    public boolean isSendBeforeCommit() {
        return this.sendBeforeCommit;
    }
    
    public void setSendBeforeCommit(boolean sendBeforeCommit) {
        this.sendBeforeCommit = sendBeforeCommit;
    }

    
    @Column(name="CREATE_TS", precision=20, scale=0)
    public BigDecimal getCreateTs() {
        return this.createTs;
    }
    
    public void setCreateTs(BigDecimal createTs) {
        this.createTs = createTs;
    }

    
    @Column(name="LAST_UPDATE_TS", precision=20, scale=0)
    public BigDecimal getLastUpdateTs() {
        return this.lastUpdateTs;
    }
    
    public void setLastUpdateTs(BigDecimal lastUpdateTs) {
        this.lastUpdateTs = lastUpdateTs;
    }

    
    @Column(name="CACHE_CATEGORY", length=1000)
    public String getCacheCategory() {
        return this.cacheCategory;
    }
    
    public void setCacheCategory(String cacheCategory) {
        this.cacheCategory = cacheCategory;
    }

    
    @Column(name="USE_MEMORY_SHRINKER", length=1)
    public Character getUseMemoryShrinker() {
        return this.useMemoryShrinker;
    }
    
    public void setUseMemoryShrinker(Character useMemoryShrinker) {
        this.useMemoryShrinker = useMemoryShrinker;
    }

    
    @Column(name="CLONE_OBJECTS", length=1)
    public Character getCloneObjects() {
        return this.cloneObjects;
    }
    
    public void setCloneObjects(Character cloneObjects) {
        this.cloneObjects = cloneObjects;
    }

    
    @Column(name="USE_DISC", length=1)
    public Character getUseDisc() {
        return this.useDisc;
    }
    
    public void setUseDisc(Character useDisc) {
        this.useDisc = useDisc;
    }

    
    @Column(name="USE_LATERAL", length=1)
    public Character getUseLateral() {
        return this.useLateral;
    }
    
    public void setUseLateral(Character useLateral) {
        this.useLateral = useLateral;
    }

    
    @Column(name="USE_SYNCH_GROUPS", length=1)
    public Character getUseSynchGroups() {
        return this.useSynchGroups;
    }
    
    public void setUseSynchGroups(Character useSynchGroups) {
        this.useSynchGroups = useSynchGroups;
    }

    
    @Column(name="USE_GROUPS_AS_RELATIONS", length=1)
    public Character getUseGroupsAsRelations() {
        return this.useGroupsAsRelations;
    }
    
    public void setUseGroupsAsRelations(Character useGroupsAsRelations) {
        this.useGroupsAsRelations = useGroupsAsRelations;
    }

    
    @Column(name="LOADER_CLASS", length=2000)
    public String getLoaderClass() {
        return this.loaderClass;
    }
    
    public void setLoaderClass(String loaderClass) {
        this.loaderClass = loaderClass;
    }

    
    @Column(name="SCHEMA_CONSISTENT", nullable=false, precision=1, scale=0)
    public boolean isSchemaConsistent() {
        return this.schemaConsistent;
    }
    
    public void setSchemaConsistent(boolean schemaConsistent) {
        this.schemaConsistent = schemaConsistent;
    }




}


