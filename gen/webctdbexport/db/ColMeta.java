package webctdbexport.db;
// Generated 17-Jun-2011 11:38:57 by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ColMeta generated by hbm2java
 */
@Entity
@Table(name="COL_META"
)
public class ColMeta  implements java.io.Serializable {


     private BigDecimal id;
     private LearningContext learningContext;
     private ColMetaGroup colMetaGroup;
     private ColModule colModule;
     private String name;
     private short datatype;
     private String description;
     private boolean immutable;
     private boolean notDeleteable;
     private boolean notHideable;
     private boolean mandatory;
     private boolean gradeable;
     private boolean builtin;
     private boolean useSelectedVals;
     private String specSource;
     private BigDecimal deletestatus;
     private BigDecimal createTs;
     private BigDecimal lastmodifyTs;
     private Set<PersonQuerySelect> personQuerySelects = new HashSet<PersonQuerySelect>(0);
     private Set<ColMetaLcVis> colMetaLcVises = new HashSet<ColMetaLcVis>(0);
     private Set<ColMetaLcPerson> colMetaLcPersons = new HashSet<ColMetaLcPerson>(0);
     private Set<ColMetaAttrValue> colMetaAttrValues = new HashSet<ColMetaAttrValue>(0);
     private Set<ColValue> colValues = new HashSet<ColValue>(0);
     private Set<ColMetaSelection> colMetaSelections = new HashSet<ColMetaSelection>(0);
     private Set<PersonQueryCriteria> personQueryCriterias = new HashSet<PersonQueryCriteria>(0);
     private Set<ColMetaLcModule> colMetaLcModules = new HashSet<ColMetaLcModule>(0);

    public ColMeta() {
    }

	
    public ColMeta(BigDecimal id, ColModule colModule, String name, short datatype, boolean immutable, boolean notDeleteable, boolean notHideable, boolean mandatory, boolean gradeable, boolean builtin, boolean useSelectedVals, String specSource, BigDecimal deletestatus, BigDecimal createTs, BigDecimal lastmodifyTs) {
        this.id = id;
        this.colModule = colModule;
        this.name = name;
        this.datatype = datatype;
        this.immutable = immutable;
        this.notDeleteable = notDeleteable;
        this.notHideable = notHideable;
        this.mandatory = mandatory;
        this.gradeable = gradeable;
        this.builtin = builtin;
        this.useSelectedVals = useSelectedVals;
        this.specSource = specSource;
        this.deletestatus = deletestatus;
        this.createTs = createTs;
        this.lastmodifyTs = lastmodifyTs;
    }
    public ColMeta(BigDecimal id, LearningContext learningContext, ColMetaGroup colMetaGroup, ColModule colModule, String name, short datatype, String description, boolean immutable, boolean notDeleteable, boolean notHideable, boolean mandatory, boolean gradeable, boolean builtin, boolean useSelectedVals, String specSource, BigDecimal deletestatus, BigDecimal createTs, BigDecimal lastmodifyTs, Set<PersonQuerySelect> personQuerySelects, Set<ColMetaLcVis> colMetaLcVises, Set<ColMetaLcPerson> colMetaLcPersons, Set<ColMetaAttrValue> colMetaAttrValues, Set<ColValue> colValues, Set<ColMetaSelection> colMetaSelections, Set<PersonQueryCriteria> personQueryCriterias, Set<ColMetaLcModule> colMetaLcModules) {
       this.id = id;
       this.learningContext = learningContext;
       this.colMetaGroup = colMetaGroup;
       this.colModule = colModule;
       this.name = name;
       this.datatype = datatype;
       this.description = description;
       this.immutable = immutable;
       this.notDeleteable = notDeleteable;
       this.notHideable = notHideable;
       this.mandatory = mandatory;
       this.gradeable = gradeable;
       this.builtin = builtin;
       this.useSelectedVals = useSelectedVals;
       this.specSource = specSource;
       this.deletestatus = deletestatus;
       this.createTs = createTs;
       this.lastmodifyTs = lastmodifyTs;
       this.personQuerySelects = personQuerySelects;
       this.colMetaLcVises = colMetaLcVises;
       this.colMetaLcPersons = colMetaLcPersons;
       this.colMetaAttrValues = colMetaAttrValues;
       this.colValues = colValues;
       this.colMetaSelections = colMetaSelections;
       this.personQueryCriterias = personQueryCriterias;
       this.colMetaLcModules = colMetaLcModules;
    }
   
     @Id 

    
    @Column(name="ID", nullable=false, precision=20, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OWNER_LEARNING_CONTEXT_ID")
    public LearningContext getLearningContext() {
        return this.learningContext;
    }
    
    public void setLearningContext(LearningContext learningContext) {
        this.learningContext = learningContext;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COL_META_GROUP_ID")
    public ColMetaGroup getColMetaGroup() {
        return this.colMetaGroup;
    }
    
    public void setColMetaGroup(ColMetaGroup colMetaGroup) {
        this.colMetaGroup = colMetaGroup;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OWNER_MODULE_ID", nullable=false)
    public ColModule getColModule() {
        return this.colModule;
    }
    
    public void setColModule(ColModule colModule) {
        this.colModule = colModule;
    }

    
    @Column(name="NAME", nullable=false, length=256)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="DATATYPE", nullable=false, precision=4, scale=0)
    public short getDatatype() {
        return this.datatype;
    }
    
    public void setDatatype(short datatype) {
        this.datatype = datatype;
    }

    
    @Column(name="DESCRIPTION", length=4000)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="IMMUTABLE", nullable=false, precision=1, scale=0)
    public boolean isImmutable() {
        return this.immutable;
    }
    
    public void setImmutable(boolean immutable) {
        this.immutable = immutable;
    }

    
    @Column(name="NOT_DELETEABLE", nullable=false, precision=1, scale=0)
    public boolean isNotDeleteable() {
        return this.notDeleteable;
    }
    
    public void setNotDeleteable(boolean notDeleteable) {
        this.notDeleteable = notDeleteable;
    }

    
    @Column(name="NOT_HIDEABLE", nullable=false, precision=1, scale=0)
    public boolean isNotHideable() {
        return this.notHideable;
    }
    
    public void setNotHideable(boolean notHideable) {
        this.notHideable = notHideable;
    }

    
    @Column(name="MANDATORY", nullable=false, precision=1, scale=0)
    public boolean isMandatory() {
        return this.mandatory;
    }
    
    public void setMandatory(boolean mandatory) {
        this.mandatory = mandatory;
    }

    
    @Column(name="GRADEABLE", nullable=false, precision=1, scale=0)
    public boolean isGradeable() {
        return this.gradeable;
    }
    
    public void setGradeable(boolean gradeable) {
        this.gradeable = gradeable;
    }

    
    @Column(name="BUILTIN", nullable=false, precision=1, scale=0)
    public boolean isBuiltin() {
        return this.builtin;
    }
    
    public void setBuiltin(boolean builtin) {
        this.builtin = builtin;
    }

    
    @Column(name="USE_SELECTED_VALS", nullable=false, precision=1, scale=0)
    public boolean isUseSelectedVals() {
        return this.useSelectedVals;
    }
    
    public void setUseSelectedVals(boolean useSelectedVals) {
        this.useSelectedVals = useSelectedVals;
    }

    
    @Column(name="SPEC_SOURCE", nullable=false, length=40)
    public String getSpecSource() {
        return this.specSource;
    }
    
    public void setSpecSource(String specSource) {
        this.specSource = specSource;
    }

    
    @Column(name="DELETESTATUS", nullable=false, precision=22, scale=0)
    public BigDecimal getDeletestatus() {
        return this.deletestatus;
    }
    
    public void setDeletestatus(BigDecimal deletestatus) {
        this.deletestatus = deletestatus;
    }

    
    @Column(name="CREATE_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getCreateTs() {
        return this.createTs;
    }
    
    public void setCreateTs(BigDecimal createTs) {
        this.createTs = createTs;
    }

    
    @Column(name="LASTMODIFY_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getLastmodifyTs() {
        return this.lastmodifyTs;
    }
    
    public void setLastmodifyTs(BigDecimal lastmodifyTs) {
        this.lastmodifyTs = lastmodifyTs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colMeta")
    public Set<PersonQuerySelect> getPersonQuerySelects() {
        return this.personQuerySelects;
    }
    
    public void setPersonQuerySelects(Set<PersonQuerySelect> personQuerySelects) {
        this.personQuerySelects = personQuerySelects;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colMeta")
    public Set<ColMetaLcVis> getColMetaLcVises() {
        return this.colMetaLcVises;
    }
    
    public void setColMetaLcVises(Set<ColMetaLcVis> colMetaLcVises) {
        this.colMetaLcVises = colMetaLcVises;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colMeta")
    public Set<ColMetaLcPerson> getColMetaLcPersons() {
        return this.colMetaLcPersons;
    }
    
    public void setColMetaLcPersons(Set<ColMetaLcPerson> colMetaLcPersons) {
        this.colMetaLcPersons = colMetaLcPersons;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colMeta")
    public Set<ColMetaAttrValue> getColMetaAttrValues() {
        return this.colMetaAttrValues;
    }
    
    public void setColMetaAttrValues(Set<ColMetaAttrValue> colMetaAttrValues) {
        this.colMetaAttrValues = colMetaAttrValues;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colMeta")
    public Set<ColValue> getColValues() {
        return this.colValues;
    }
    
    public void setColValues(Set<ColValue> colValues) {
        this.colValues = colValues;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colMeta")
    public Set<ColMetaSelection> getColMetaSelections() {
        return this.colMetaSelections;
    }
    
    public void setColMetaSelections(Set<ColMetaSelection> colMetaSelections) {
        this.colMetaSelections = colMetaSelections;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colMeta")
    public Set<PersonQueryCriteria> getPersonQueryCriterias() {
        return this.personQueryCriterias;
    }
    
    public void setPersonQueryCriterias(Set<PersonQueryCriteria> personQueryCriterias) {
        this.personQueryCriterias = personQueryCriterias;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colMeta")
    public Set<ColMetaLcModule> getColMetaLcModules() {
        return this.colMetaLcModules;
    }
    
    public void setColMetaLcModules(Set<ColMetaLcModule> colMetaLcModules) {
        this.colMetaLcModules = colMetaLcModules;
    }




}


