package webctdbexport.db;
// Generated 17-Jun-2011 11:38:57 by Hibernate Tools 3.4.0.CR1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * CwbActivechatuser generated by hbm2java
 */
@Entity
@Table(name="CWB_ACTIVECHATUSER"
)
public class CwbActivechatuser  implements java.io.Serializable {


     private CwbActivechatuserId id;
     private Person person;
     private CwbChatroom cwbChatroom;
     private String serverId;
     private String displayname;
     private boolean usermode;
     private boolean userrole;
     private short userhandraisecount;

    public CwbActivechatuser() {
    }

    public CwbActivechatuser(CwbActivechatuserId id, Person person, CwbChatroom cwbChatroom, String serverId, String displayname, boolean usermode, boolean userrole, short userhandraisecount) {
       this.id = id;
       this.person = person;
       this.cwbChatroom = cwbChatroom;
       this.serverId = serverId;
       this.displayname = displayname;
       this.usermode = usermode;
       this.userrole = userrole;
       this.userhandraisecount = userhandraisecount;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="personId", column=@Column(name="PERSON_ID", nullable=false, precision=20, scale=0) ), 
        @AttributeOverride(name="roomId", column=@Column(name="ROOM_ID", nullable=false, precision=20, scale=0) ) } )
    public CwbActivechatuserId getId() {
        return this.id;
    }
    
    public void setId(CwbActivechatuserId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PERSON_ID", nullable=false, insertable=false, updatable=false)
    public Person getPerson() {
        return this.person;
    }
    
    public void setPerson(Person person) {
        this.person = person;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ROOM_ID", nullable=false, insertable=false, updatable=false)
    public CwbChatroom getCwbChatroom() {
        return this.cwbChatroom;
    }
    
    public void setCwbChatroom(CwbChatroom cwbChatroom) {
        this.cwbChatroom = cwbChatroom;
    }

    
    @Column(name="SERVER_ID", nullable=false, length=50)
    public String getServerId() {
        return this.serverId;
    }
    
    public void setServerId(String serverId) {
        this.serverId = serverId;
    }

    
    @Column(name="DISPLAYNAME", nullable=false, length=300)
    public String getDisplayname() {
        return this.displayname;
    }
    
    public void setDisplayname(String displayname) {
        this.displayname = displayname;
    }

    
    @Column(name="USERMODE", nullable=false, precision=1, scale=0)
    public boolean isUsermode() {
        return this.usermode;
    }
    
    public void setUsermode(boolean usermode) {
        this.usermode = usermode;
    }

    
    @Column(name="USERROLE", nullable=false, precision=1, scale=0)
    public boolean isUserrole() {
        return this.userrole;
    }
    
    public void setUserrole(boolean userrole) {
        this.userrole = userrole;
    }

    
    @Column(name="USERHANDRAISECOUNT", nullable=false, precision=4, scale=0)
    public short getUserhandraisecount() {
        return this.userhandraisecount;
    }
    
    public void setUserhandraisecount(short userhandraisecount) {
        this.userhandraisecount = userhandraisecount;
    }




}


