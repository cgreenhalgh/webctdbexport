package webctdbexport.db;
// Generated 17-Jun-2011 11:38:57 by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.sql.Clob;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * CmsContentEntry generated by hbm2java
 */
@Entity
@Table(name="CMS_CONTENT_ENTRY"
)
public class CmsContentEntry  implements java.io.Serializable {


     private BigDecimal id;
     private CmsCeLanguage cmsCeLanguage;
     private CmsContentEntry cmsContentEntryByDeliveryContextId;
     private CmsFileContent cmsFileContent;
     private CmsContentEntry cmsContentEntryByParentId;
     private PublisherLicense publisherLicense;
     private AccessControlList accessControlList;
     private CmsCeSubtype cmsCeSubtype;
     private Person person;
     private CmsContentEntry cmsContentEntryByOriginalContentId;
     private String name;
     private String guid;
     private BigDecimal deletedFlag;
     private BigDecimal filesize;
     private boolean quotable;
     private boolean htmlDescriptionFlag;
     private BigDecimal createTs;
     private BigDecimal lastmodifyTs;
     private Clob description;
     private BigDecimal entryCreateTs;
     private BigDecimal entryLastmodifyTs;
     private BigDecimal transactionStatus;
     private boolean subscriptionFlag;
     private boolean learnerWritableFlag;
     private Set<CmsUniqueName> cmsUniqueNames = new HashSet<CmsUniqueName>(0);
     private CwbChatroom cwbChatroom;
     private DisCategory disCategory;
     private Set<CoReadStatus> coReadStatuses = new HashSet<CoReadStatus>(0);
     private CoTemplate coTemplate;
     private Set<CmsContentEntry> cmsContentEntriesForOriginalContentId = new HashSet<CmsContentEntry>(0);
     private CoActionmenu coActionmenuById;
     private Set<CoNewStatus> coNewStatuses = new HashSet<CoNewStatus>(0);
     private ScormPackage scormPackage;
     private CoOrganizerpage coOrganizerpage;
     private Syllabus syllabus;
     private Set<SimpleFileGroup> simpleFileGroups = new HashSet<SimpleFileGroup>(0);
     private MlEntry mlEntry;
     private Set<SearchableObject> searchableObjects = new HashSet<SearchableObject>(0);
     private DisTopic disTopic;
     private Set<PstSettingBundle> pstSettingBundles = new HashSet<PstSettingBundle>(0);
     private Set<LearningContext> learningContexts = new HashSet<LearningContext>(0);
     private MlCollection mlCollection;
     private Set<AssmtSetting> assmtSettings = new HashSet<AssmtSetting>(0);
     private Set<NotesItem> notesItems = new HashSet<NotesItem>(0);
     private Set<CmsLinkOrder> cmsLinkOrders = new HashSet<CmsLinkOrder>(0);
     private Set<RubricUsage> rubricUsages = new HashSet<RubricUsage>(0);
     private AgnAssignment agnAssignment;
     private Set<CoOrganizerlink> coOrganizerlinks = new HashSet<CoOrganizerlink>(0);
     private CoContentpage coContentpage;
     private Set<DisMessage> disMessages = new HashSet<DisMessage>(0);
     private Set<PstReplacementIcon> pstReplacementIcons = new HashSet<PstReplacementIcon>(0);
     private CoResource coResource;
     private AssmtQuestion assmtQuestion;
     private AssmtAssessment assmtAssessment;
     private Set<CmsContentEntry> cmsContentEntriesForParentId = new HashSet<CmsContentEntry>(0);
     private AssmtQdb assmtQdb;
     private Set<SelfEnrollmentLc> selfEnrollmentLcs = new HashSet<SelfEnrollmentLc>(0);
     private Set<CmsLink> cmsLinksForLeftobjectId = new HashSet<CmsLink>(0);
     private FmsAttributes fmsAttributes;
     private Set<SectionColumn> sectionColumns = new HashSet<SectionColumn>(0);
     private Set<CoActionmenu> coActionmenusForReferenceId = new HashSet<CoActionmenu>(0);
     private CoUrl coUrl;
     private Set<CmsContentEntry> cmsContentEntriesForDeliveryContextId = new HashSet<CmsContentEntry>(0);
     private Set<CalendarEntry> calendarEntries = new HashSet<CalendarEntry>(0);
     private Set<SrUsage> srUsages = new HashSet<SrUsage>(0);
     private Set<CmsLink> cmsLinksForRightobjectId = new HashSet<CmsLink>(0);
     private CoToc coToc;

    public CmsContentEntry() {
    }

	
    public CmsContentEntry(BigDecimal id, AccessControlList accessControlList, CmsCeSubtype cmsCeSubtype, Person person, CmsContentEntry cmsContentEntryByOriginalContentId, String name, String guid, BigDecimal deletedFlag, BigDecimal filesize, boolean quotable, boolean htmlDescriptionFlag, BigDecimal createTs, BigDecimal lastmodifyTs, BigDecimal entryCreateTs, BigDecimal entryLastmodifyTs, boolean subscriptionFlag, boolean learnerWritableFlag) {
        this.id = id;
        this.accessControlList = accessControlList;
        this.cmsCeSubtype = cmsCeSubtype;
        this.person = person;
        this.cmsContentEntryByOriginalContentId = cmsContentEntryByOriginalContentId;
        this.name = name;
        this.guid = guid;
        this.deletedFlag = deletedFlag;
        this.filesize = filesize;
        this.quotable = quotable;
        this.htmlDescriptionFlag = htmlDescriptionFlag;
        this.createTs = createTs;
        this.lastmodifyTs = lastmodifyTs;
        this.entryCreateTs = entryCreateTs;
        this.entryLastmodifyTs = entryLastmodifyTs;
        this.subscriptionFlag = subscriptionFlag;
        this.learnerWritableFlag = learnerWritableFlag;
    }
    public CmsContentEntry(BigDecimal id, CmsCeLanguage cmsCeLanguage, CmsContentEntry cmsContentEntryByDeliveryContextId, CmsFileContent cmsFileContent, CmsContentEntry cmsContentEntryByParentId, PublisherLicense publisherLicense, AccessControlList accessControlList, CmsCeSubtype cmsCeSubtype, Person person, CmsContentEntry cmsContentEntryByOriginalContentId, String name, String guid, BigDecimal deletedFlag, BigDecimal filesize, boolean quotable, boolean htmlDescriptionFlag, BigDecimal createTs, BigDecimal lastmodifyTs, Clob description, BigDecimal entryCreateTs, BigDecimal entryLastmodifyTs, BigDecimal transactionStatus, boolean subscriptionFlag, boolean learnerWritableFlag, Set<CmsUniqueName> cmsUniqueNames, CwbChatroom cwbChatroom, DisCategory disCategory, Set<CoReadStatus> coReadStatuses, CoTemplate coTemplate, Set<CmsContentEntry> cmsContentEntriesForOriginalContentId, CoActionmenu coActionmenuById, Set<CoNewStatus> coNewStatuses, ScormPackage scormPackage, CoOrganizerpage coOrganizerpage, Syllabus syllabus, Set<SimpleFileGroup> simpleFileGroups, MlEntry mlEntry, Set<SearchableObject> searchableObjects, DisTopic disTopic, Set<PstSettingBundle> pstSettingBundles, Set<LearningContext> learningContexts, MlCollection mlCollection, Set<AssmtSetting> assmtSettings, Set<NotesItem> notesItems, Set<CmsLinkOrder> cmsLinkOrders, Set<RubricUsage> rubricUsages, AgnAssignment agnAssignment, Set<CoOrganizerlink> coOrganizerlinks, CoContentpage coContentpage, Set<DisMessage> disMessages, Set<PstReplacementIcon> pstReplacementIcons, CoResource coResource, AssmtQuestion assmtQuestion, AssmtAssessment assmtAssessment, Set<CmsContentEntry> cmsContentEntriesForParentId, AssmtQdb assmtQdb, Set<SelfEnrollmentLc> selfEnrollmentLcs, Set<CmsLink> cmsLinksForLeftobjectId, FmsAttributes fmsAttributes, Set<SectionColumn> sectionColumns, Set<CoActionmenu> coActionmenusForReferenceId, CoUrl coUrl, Set<CmsContentEntry> cmsContentEntriesForDeliveryContextId, Set<CalendarEntry> calendarEntries, Set<SrUsage> srUsages, Set<CmsLink> cmsLinksForRightobjectId, CoToc coToc) {
       this.id = id;
       this.cmsCeLanguage = cmsCeLanguage;
       this.cmsContentEntryByDeliveryContextId = cmsContentEntryByDeliveryContextId;
       this.cmsFileContent = cmsFileContent;
       this.cmsContentEntryByParentId = cmsContentEntryByParentId;
       this.publisherLicense = publisherLicense;
       this.accessControlList = accessControlList;
       this.cmsCeSubtype = cmsCeSubtype;
       this.person = person;
       this.cmsContentEntryByOriginalContentId = cmsContentEntryByOriginalContentId;
       this.name = name;
       this.guid = guid;
       this.deletedFlag = deletedFlag;
       this.filesize = filesize;
       this.quotable = quotable;
       this.htmlDescriptionFlag = htmlDescriptionFlag;
       this.createTs = createTs;
       this.lastmodifyTs = lastmodifyTs;
       this.description = description;
       this.entryCreateTs = entryCreateTs;
       this.entryLastmodifyTs = entryLastmodifyTs;
       this.transactionStatus = transactionStatus;
       this.subscriptionFlag = subscriptionFlag;
       this.learnerWritableFlag = learnerWritableFlag;
       this.cmsUniqueNames = cmsUniqueNames;
       this.cwbChatroom = cwbChatroom;
       this.disCategory = disCategory;
       this.coReadStatuses = coReadStatuses;
       this.coTemplate = coTemplate;
       this.cmsContentEntriesForOriginalContentId = cmsContentEntriesForOriginalContentId;
       this.coActionmenuById = coActionmenuById;
       this.coNewStatuses = coNewStatuses;
       this.scormPackage = scormPackage;
       this.coOrganizerpage = coOrganizerpage;
       this.syllabus = syllabus;
       this.simpleFileGroups = simpleFileGroups;
       this.mlEntry = mlEntry;
       this.searchableObjects = searchableObjects;
       this.disTopic = disTopic;
       this.pstSettingBundles = pstSettingBundles;
       this.learningContexts = learningContexts;
       this.mlCollection = mlCollection;
       this.assmtSettings = assmtSettings;
       this.notesItems = notesItems;
       this.cmsLinkOrders = cmsLinkOrders;
       this.rubricUsages = rubricUsages;
       this.agnAssignment = agnAssignment;
       this.coOrganizerlinks = coOrganizerlinks;
       this.coContentpage = coContentpage;
       this.disMessages = disMessages;
       this.pstReplacementIcons = pstReplacementIcons;
       this.coResource = coResource;
       this.assmtQuestion = assmtQuestion;
       this.assmtAssessment = assmtAssessment;
       this.cmsContentEntriesForParentId = cmsContentEntriesForParentId;
       this.assmtQdb = assmtQdb;
       this.selfEnrollmentLcs = selfEnrollmentLcs;
       this.cmsLinksForLeftobjectId = cmsLinksForLeftobjectId;
       this.fmsAttributes = fmsAttributes;
       this.sectionColumns = sectionColumns;
       this.coActionmenusForReferenceId = coActionmenusForReferenceId;
       this.coUrl = coUrl;
       this.cmsContentEntriesForDeliveryContextId = cmsContentEntriesForDeliveryContextId;
       this.calendarEntries = calendarEntries;
       this.srUsages = srUsages;
       this.cmsLinksForRightobjectId = cmsLinksForRightobjectId;
       this.coToc = coToc;
    }
   
     @Id 

    
    @Column(name="ID", nullable=false, precision=20, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="LANGUAGE")
    public CmsCeLanguage getCmsCeLanguage() {
        return this.cmsCeLanguage;
    }
    
    public void setCmsCeLanguage(CmsCeLanguage cmsCeLanguage) {
        this.cmsCeLanguage = cmsCeLanguage;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DELIVERY_CONTEXT_ID")
    public CmsContentEntry getCmsContentEntryByDeliveryContextId() {
        return this.cmsContentEntryByDeliveryContextId;
    }
    
    public void setCmsContentEntryByDeliveryContextId(CmsContentEntry cmsContentEntryByDeliveryContextId) {
        this.cmsContentEntryByDeliveryContextId = cmsContentEntryByDeliveryContextId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="FILE_CONTENT_ID")
    public CmsFileContent getCmsFileContent() {
        return this.cmsFileContent;
    }
    
    public void setCmsFileContent(CmsFileContent cmsFileContent) {
        this.cmsFileContent = cmsFileContent;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PARENT_ID")
    public CmsContentEntry getCmsContentEntryByParentId() {
        return this.cmsContentEntryByParentId;
    }
    
    public void setCmsContentEntryByParentId(CmsContentEntry cmsContentEntryByParentId) {
        this.cmsContentEntryByParentId = cmsContentEntryByParentId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PUBLISHER_LICENSE_ID")
    public PublisherLicense getPublisherLicense() {
        return this.publisherLicense;
    }
    
    public void setPublisherLicense(PublisherLicense publisherLicense) {
        this.publisherLicense = publisherLicense;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ACL_ID", nullable=false)
    public AccessControlList getAccessControlList() {
        return this.accessControlList;
    }
    
    public void setAccessControlList(AccessControlList accessControlList) {
        this.accessControlList = accessControlList;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="CE_TYPE_NAME", referencedColumnName="CE_TYPE_NAME", nullable=false), 
        @JoinColumn(name="CE_SUBTYPE_NAME", referencedColumnName="NAME", nullable=false) } )
    public CmsCeSubtype getCmsCeSubtype() {
        return this.cmsCeSubtype;
    }
    
    public void setCmsCeSubtype(CmsCeSubtype cmsCeSubtype) {
        this.cmsCeSubtype = cmsCeSubtype;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OWNER_ID", nullable=false)
    public Person getPerson() {
        return this.person;
    }
    
    public void setPerson(Person person) {
        this.person = person;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ORIGINAL_CONTENT_ID", nullable=false)
    public CmsContentEntry getCmsContentEntryByOriginalContentId() {
        return this.cmsContentEntryByOriginalContentId;
    }
    
    public void setCmsContentEntryByOriginalContentId(CmsContentEntry cmsContentEntryByOriginalContentId) {
        this.cmsContentEntryByOriginalContentId = cmsContentEntryByOriginalContentId;
    }

    
    @Column(name="NAME", nullable=false, length=1000)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="GUID", nullable=false, length=256)
    public String getGuid() {
        return this.guid;
    }
    
    public void setGuid(String guid) {
        this.guid = guid;
    }

    
    @Column(name="DELETED_FLAG", nullable=false, precision=20, scale=0)
    public BigDecimal getDeletedFlag() {
        return this.deletedFlag;
    }
    
    public void setDeletedFlag(BigDecimal deletedFlag) {
        this.deletedFlag = deletedFlag;
    }

    
    @Column(name="FILESIZE", nullable=false, precision=20, scale=0)
    public BigDecimal getFilesize() {
        return this.filesize;
    }
    
    public void setFilesize(BigDecimal filesize) {
        this.filesize = filesize;
    }

    
    @Column(name="QUOTABLE", nullable=false, precision=1, scale=0)
    public boolean isQuotable() {
        return this.quotable;
    }
    
    public void setQuotable(boolean quotable) {
        this.quotable = quotable;
    }

    
    @Column(name="HTML_DESCRIPTION_FLAG", nullable=false, precision=1, scale=0)
    public boolean isHtmlDescriptionFlag() {
        return this.htmlDescriptionFlag;
    }
    
    public void setHtmlDescriptionFlag(boolean htmlDescriptionFlag) {
        this.htmlDescriptionFlag = htmlDescriptionFlag;
    }

    
    @Column(name="CREATE_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getCreateTs() {
        return this.createTs;
    }
    
    public void setCreateTs(BigDecimal createTs) {
        this.createTs = createTs;
    }

    
    @Column(name="LASTMODIFY_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getLastmodifyTs() {
        return this.lastmodifyTs;
    }
    
    public void setLastmodifyTs(BigDecimal lastmodifyTs) {
        this.lastmodifyTs = lastmodifyTs;
    }

    
    @Column(name="DESCRIPTION")
    public Clob getDescription() {
        return this.description;
    }
    
    public void setDescription(Clob description) {
        this.description = description;
    }

    
    @Column(name="ENTRY_CREATE_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getEntryCreateTs() {
        return this.entryCreateTs;
    }
    
    public void setEntryCreateTs(BigDecimal entryCreateTs) {
        this.entryCreateTs = entryCreateTs;
    }

    
    @Column(name="ENTRY_LASTMODIFY_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getEntryLastmodifyTs() {
        return this.entryLastmodifyTs;
    }
    
    public void setEntryLastmodifyTs(BigDecimal entryLastmodifyTs) {
        this.entryLastmodifyTs = entryLastmodifyTs;
    }

    
    @Column(name="TRANSACTION_STATUS", precision=20, scale=0)
    public BigDecimal getTransactionStatus() {
        return this.transactionStatus;
    }
    
    public void setTransactionStatus(BigDecimal transactionStatus) {
        this.transactionStatus = transactionStatus;
    }

    
    @Column(name="SUBSCRIPTION_FLAG", nullable=false, precision=1, scale=0)
    public boolean isSubscriptionFlag() {
        return this.subscriptionFlag;
    }
    
    public void setSubscriptionFlag(boolean subscriptionFlag) {
        this.subscriptionFlag = subscriptionFlag;
    }

    
    @Column(name="LEARNER_WRITABLE_FLAG", nullable=false, precision=1, scale=0)
    public boolean isLearnerWritableFlag() {
        return this.learnerWritableFlag;
    }
    
    public void setLearnerWritableFlag(boolean learnerWritableFlag) {
        this.learnerWritableFlag = learnerWritableFlag;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<CmsUniqueName> getCmsUniqueNames() {
        return this.cmsUniqueNames;
    }
    
    public void setCmsUniqueNames(Set<CmsUniqueName> cmsUniqueNames) {
        this.cmsUniqueNames = cmsUniqueNames;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public CwbChatroom getCwbChatroom() {
        return this.cwbChatroom;
    }
    
    public void setCwbChatroom(CwbChatroom cwbChatroom) {
        this.cwbChatroom = cwbChatroom;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public DisCategory getDisCategory() {
        return this.disCategory;
    }
    
    public void setDisCategory(DisCategory disCategory) {
        this.disCategory = disCategory;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<CoReadStatus> getCoReadStatuses() {
        return this.coReadStatuses;
    }
    
    public void setCoReadStatuses(Set<CoReadStatus> coReadStatuses) {
        this.coReadStatuses = coReadStatuses;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public CoTemplate getCoTemplate() {
        return this.coTemplate;
    }
    
    public void setCoTemplate(CoTemplate coTemplate) {
        this.coTemplate = coTemplate;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntryByOriginalContentId")
    public Set<CmsContentEntry> getCmsContentEntriesForOriginalContentId() {
        return this.cmsContentEntriesForOriginalContentId;
    }
    
    public void setCmsContentEntriesForOriginalContentId(Set<CmsContentEntry> cmsContentEntriesForOriginalContentId) {
        this.cmsContentEntriesForOriginalContentId = cmsContentEntriesForOriginalContentId;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntryById")
    public CoActionmenu getCoActionmenuById() {
        return this.coActionmenuById;
    }
    
    public void setCoActionmenuById(CoActionmenu coActionmenuById) {
        this.coActionmenuById = coActionmenuById;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<CoNewStatus> getCoNewStatuses() {
        return this.coNewStatuses;
    }
    
    public void setCoNewStatuses(Set<CoNewStatus> coNewStatuses) {
        this.coNewStatuses = coNewStatuses;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public ScormPackage getScormPackage() {
        return this.scormPackage;
    }
    
    public void setScormPackage(ScormPackage scormPackage) {
        this.scormPackage = scormPackage;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public CoOrganizerpage getCoOrganizerpage() {
        return this.coOrganizerpage;
    }
    
    public void setCoOrganizerpage(CoOrganizerpage coOrganizerpage) {
        this.coOrganizerpage = coOrganizerpage;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public Syllabus getSyllabus() {
        return this.syllabus;
    }
    
    public void setSyllabus(Syllabus syllabus) {
        this.syllabus = syllabus;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<SimpleFileGroup> getSimpleFileGroups() {
        return this.simpleFileGroups;
    }
    
    public void setSimpleFileGroups(Set<SimpleFileGroup> simpleFileGroups) {
        this.simpleFileGroups = simpleFileGroups;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public MlEntry getMlEntry() {
        return this.mlEntry;
    }
    
    public void setMlEntry(MlEntry mlEntry) {
        this.mlEntry = mlEntry;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<SearchableObject> getSearchableObjects() {
        return this.searchableObjects;
    }
    
    public void setSearchableObjects(Set<SearchableObject> searchableObjects) {
        this.searchableObjects = searchableObjects;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public DisTopic getDisTopic() {
        return this.disTopic;
    }
    
    public void setDisTopic(DisTopic disTopic) {
        this.disTopic = disTopic;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<PstSettingBundle> getPstSettingBundles() {
        return this.pstSettingBundles;
    }
    
    public void setPstSettingBundles(Set<PstSettingBundle> pstSettingBundles) {
        this.pstSettingBundles = pstSettingBundles;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<LearningContext> getLearningContexts() {
        return this.learningContexts;
    }
    
    public void setLearningContexts(Set<LearningContext> learningContexts) {
        this.learningContexts = learningContexts;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public MlCollection getMlCollection() {
        return this.mlCollection;
    }
    
    public void setMlCollection(MlCollection mlCollection) {
        this.mlCollection = mlCollection;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<AssmtSetting> getAssmtSettings() {
        return this.assmtSettings;
    }
    
    public void setAssmtSettings(Set<AssmtSetting> assmtSettings) {
        this.assmtSettings = assmtSettings;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<NotesItem> getNotesItems() {
        return this.notesItems;
    }
    
    public void setNotesItems(Set<NotesItem> notesItems) {
        this.notesItems = notesItems;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<CmsLinkOrder> getCmsLinkOrders() {
        return this.cmsLinkOrders;
    }
    
    public void setCmsLinkOrders(Set<CmsLinkOrder> cmsLinkOrders) {
        this.cmsLinkOrders = cmsLinkOrders;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<RubricUsage> getRubricUsages() {
        return this.rubricUsages;
    }
    
    public void setRubricUsages(Set<RubricUsage> rubricUsages) {
        this.rubricUsages = rubricUsages;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public AgnAssignment getAgnAssignment() {
        return this.agnAssignment;
    }
    
    public void setAgnAssignment(AgnAssignment agnAssignment) {
        this.agnAssignment = agnAssignment;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<CoOrganizerlink> getCoOrganizerlinks() {
        return this.coOrganizerlinks;
    }
    
    public void setCoOrganizerlinks(Set<CoOrganizerlink> coOrganizerlinks) {
        this.coOrganizerlinks = coOrganizerlinks;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public CoContentpage getCoContentpage() {
        return this.coContentpage;
    }
    
    public void setCoContentpage(CoContentpage coContentpage) {
        this.coContentpage = coContentpage;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<DisMessage> getDisMessages() {
        return this.disMessages;
    }
    
    public void setDisMessages(Set<DisMessage> disMessages) {
        this.disMessages = disMessages;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<PstReplacementIcon> getPstReplacementIcons() {
        return this.pstReplacementIcons;
    }
    
    public void setPstReplacementIcons(Set<PstReplacementIcon> pstReplacementIcons) {
        this.pstReplacementIcons = pstReplacementIcons;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public CoResource getCoResource() {
        return this.coResource;
    }
    
    public void setCoResource(CoResource coResource) {
        this.coResource = coResource;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public AssmtQuestion getAssmtQuestion() {
        return this.assmtQuestion;
    }
    
    public void setAssmtQuestion(AssmtQuestion assmtQuestion) {
        this.assmtQuestion = assmtQuestion;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public AssmtAssessment getAssmtAssessment() {
        return this.assmtAssessment;
    }
    
    public void setAssmtAssessment(AssmtAssessment assmtAssessment) {
        this.assmtAssessment = assmtAssessment;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntryByParentId")
    public Set<CmsContentEntry> getCmsContentEntriesForParentId() {
        return this.cmsContentEntriesForParentId;
    }
    
    public void setCmsContentEntriesForParentId(Set<CmsContentEntry> cmsContentEntriesForParentId) {
        this.cmsContentEntriesForParentId = cmsContentEntriesForParentId;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public AssmtQdb getAssmtQdb() {
        return this.assmtQdb;
    }
    
    public void setAssmtQdb(AssmtQdb assmtQdb) {
        this.assmtQdb = assmtQdb;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<SelfEnrollmentLc> getSelfEnrollmentLcs() {
        return this.selfEnrollmentLcs;
    }
    
    public void setSelfEnrollmentLcs(Set<SelfEnrollmentLc> selfEnrollmentLcs) {
        this.selfEnrollmentLcs = selfEnrollmentLcs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntryByLeftobjectId")
    public Set<CmsLink> getCmsLinksForLeftobjectId() {
        return this.cmsLinksForLeftobjectId;
    }
    
    public void setCmsLinksForLeftobjectId(Set<CmsLink> cmsLinksForLeftobjectId) {
        this.cmsLinksForLeftobjectId = cmsLinksForLeftobjectId;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public FmsAttributes getFmsAttributes() {
        return this.fmsAttributes;
    }
    
    public void setFmsAttributes(FmsAttributes fmsAttributes) {
        this.fmsAttributes = fmsAttributes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<SectionColumn> getSectionColumns() {
        return this.sectionColumns;
    }
    
    public void setSectionColumns(Set<SectionColumn> sectionColumns) {
        this.sectionColumns = sectionColumns;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntryByReferenceId")
    public Set<CoActionmenu> getCoActionmenusForReferenceId() {
        return this.coActionmenusForReferenceId;
    }
    
    public void setCoActionmenusForReferenceId(Set<CoActionmenu> coActionmenusForReferenceId) {
        this.coActionmenusForReferenceId = coActionmenusForReferenceId;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public CoUrl getCoUrl() {
        return this.coUrl;
    }
    
    public void setCoUrl(CoUrl coUrl) {
        this.coUrl = coUrl;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntryByDeliveryContextId")
    public Set<CmsContentEntry> getCmsContentEntriesForDeliveryContextId() {
        return this.cmsContentEntriesForDeliveryContextId;
    }
    
    public void setCmsContentEntriesForDeliveryContextId(Set<CmsContentEntry> cmsContentEntriesForDeliveryContextId) {
        this.cmsContentEntriesForDeliveryContextId = cmsContentEntriesForDeliveryContextId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<CalendarEntry> getCalendarEntries() {
        return this.calendarEntries;
    }
    
    public void setCalendarEntries(Set<CalendarEntry> calendarEntries) {
        this.calendarEntries = calendarEntries;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntry")
    public Set<SrUsage> getSrUsages() {
        return this.srUsages;
    }
    
    public void setSrUsages(Set<SrUsage> srUsages) {
        this.srUsages = srUsages;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsContentEntryByRightobjectId")
    public Set<CmsLink> getCmsLinksForRightobjectId() {
        return this.cmsLinksForRightobjectId;
    }
    
    public void setCmsLinksForRightobjectId(Set<CmsLink> cmsLinksForRightobjectId) {
        this.cmsLinksForRightobjectId = cmsLinksForRightobjectId;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="cmsContentEntry")
    public CoToc getCoToc() {
        return this.coToc;
    }
    
    public void setCoToc(CoToc coToc) {
        this.coToc = coToc;
    }




}


