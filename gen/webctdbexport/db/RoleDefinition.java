package webctdbexport.db;
// Generated 17-Jun-2011 11:38:57 by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * RoleDefinition generated by hbm2java
 */
@Entity
@Table(name="ROLE_DEFINITION"
)
public class RoleDefinition  implements java.io.Serializable {


     private BigDecimal id;
     private LcType lcType;
     private String name;
     private boolean deleteStatus;
     private boolean contentSharing;
     private short displayOrder;
     private BigDecimal createTs;
     private BigDecimal lastmodifyTs;
     private String label;
     private String description;
     private Set<SmsRoleBasedRestrictions> smsRoleBasedRestrictionses = new HashSet<SmsRoleBasedRestrictions>(0);
     private Set<AnnouncementRole> announcementRoles = new HashSet<AnnouncementRole>(0);
     private Set<CpmApplicableRoleId> cpmApplicableRoleIds = new HashSet<CpmApplicableRoleId>(0);
     private Set<Role> roles = new HashSet<Role>(0);

    public RoleDefinition() {
    }

	
    public RoleDefinition(BigDecimal id, LcType lcType, String name, boolean deleteStatus, boolean contentSharing, short displayOrder, BigDecimal createTs, BigDecimal lastmodifyTs) {
        this.id = id;
        this.lcType = lcType;
        this.name = name;
        this.deleteStatus = deleteStatus;
        this.contentSharing = contentSharing;
        this.displayOrder = displayOrder;
        this.createTs = createTs;
        this.lastmodifyTs = lastmodifyTs;
    }
    public RoleDefinition(BigDecimal id, LcType lcType, String name, boolean deleteStatus, boolean contentSharing, short displayOrder, BigDecimal createTs, BigDecimal lastmodifyTs, String label, String description, Set<SmsRoleBasedRestrictions> smsRoleBasedRestrictionses, Set<AnnouncementRole> announcementRoles, Set<CpmApplicableRoleId> cpmApplicableRoleIds, Set<Role> roles) {
       this.id = id;
       this.lcType = lcType;
       this.name = name;
       this.deleteStatus = deleteStatus;
       this.contentSharing = contentSharing;
       this.displayOrder = displayOrder;
       this.createTs = createTs;
       this.lastmodifyTs = lastmodifyTs;
       this.label = label;
       this.description = description;
       this.smsRoleBasedRestrictionses = smsRoleBasedRestrictionses;
       this.announcementRoles = announcementRoles;
       this.cpmApplicableRoleIds = cpmApplicableRoleIds;
       this.roles = roles;
    }
   
     @Id 

    
    @Column(name="ID", nullable=false, precision=20, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="LC_TYPE_CODE", nullable=false)
    public LcType getLcType() {
        return this.lcType;
    }
    
    public void setLcType(LcType lcType) {
        this.lcType = lcType;
    }

    
    @Column(name="NAME", nullable=false, length=30)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="DELETE_STATUS", nullable=false, precision=1, scale=0)
    public boolean isDeleteStatus() {
        return this.deleteStatus;
    }
    
    public void setDeleteStatus(boolean deleteStatus) {
        this.deleteStatus = deleteStatus;
    }

    
    @Column(name="CONTENT_SHARING", nullable=false, precision=1, scale=0)
    public boolean isContentSharing() {
        return this.contentSharing;
    }
    
    public void setContentSharing(boolean contentSharing) {
        this.contentSharing = contentSharing;
    }

    
    @Column(name="DISPLAY_ORDER", nullable=false, precision=3, scale=0)
    public short getDisplayOrder() {
        return this.displayOrder;
    }
    
    public void setDisplayOrder(short displayOrder) {
        this.displayOrder = displayOrder;
    }

    
    @Column(name="CREATE_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getCreateTs() {
        return this.createTs;
    }
    
    public void setCreateTs(BigDecimal createTs) {
        this.createTs = createTs;
    }

    
    @Column(name="LASTMODIFY_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getLastmodifyTs() {
        return this.lastmodifyTs;
    }
    
    public void setLastmodifyTs(BigDecimal lastmodifyTs) {
        this.lastmodifyTs = lastmodifyTs;
    }

    
    @Column(name="LABEL", length=100)
    public String getLabel() {
        return this.label;
    }
    
    public void setLabel(String label) {
        this.label = label;
    }

    
    @Column(name="DESCRIPTION", length=100)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="roleDefinition")
    public Set<SmsRoleBasedRestrictions> getSmsRoleBasedRestrictionses() {
        return this.smsRoleBasedRestrictionses;
    }
    
    public void setSmsRoleBasedRestrictionses(Set<SmsRoleBasedRestrictions> smsRoleBasedRestrictionses) {
        this.smsRoleBasedRestrictionses = smsRoleBasedRestrictionses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="roleDefinition")
    public Set<AnnouncementRole> getAnnouncementRoles() {
        return this.announcementRoles;
    }
    
    public void setAnnouncementRoles(Set<AnnouncementRole> announcementRoles) {
        this.announcementRoles = announcementRoles;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="roleDefinition")
    public Set<CpmApplicableRoleId> getCpmApplicableRoleIds() {
        return this.cpmApplicableRoleIds;
    }
    
    public void setCpmApplicableRoleIds(Set<CpmApplicableRoleId> cpmApplicableRoleIds) {
        this.cpmApplicableRoleIds = cpmApplicableRoleIds;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="roleDefinition")
    public Set<Role> getRoles() {
        return this.roles;
    }
    
    public void setRoles(Set<Role> roles) {
        this.roles = roles;
    }




}


