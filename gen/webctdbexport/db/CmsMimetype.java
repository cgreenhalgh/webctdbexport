package webctdbexport.db;
// Generated 17-Jun-2011 11:38:57 by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * CmsMimetype generated by hbm2java
 */
@Entity
@Table(name="CMS_MIMETYPE"
)
public class CmsMimetype  implements java.io.Serializable {


     private BigDecimal id;
     private CmsCeSubtype cmsCeSubtype;
     private String name;
     private String mimetype;
     private boolean binary;
     private String extension;
     private boolean usesRelativeLinks;
     private BigDecimal createTs;
     private BigDecimal lastmodifyTs;
     private boolean indexable;
     private Set<CmsFileContent> cmsFileContents = new HashSet<CmsFileContent>(0);

    public CmsMimetype() {
    }

	
    public CmsMimetype(BigDecimal id, CmsCeSubtype cmsCeSubtype, String name, String mimetype, boolean binary, String extension, boolean usesRelativeLinks, BigDecimal createTs, BigDecimal lastmodifyTs, boolean indexable) {
        this.id = id;
        this.cmsCeSubtype = cmsCeSubtype;
        this.name = name;
        this.mimetype = mimetype;
        this.binary = binary;
        this.extension = extension;
        this.usesRelativeLinks = usesRelativeLinks;
        this.createTs = createTs;
        this.lastmodifyTs = lastmodifyTs;
        this.indexable = indexable;
    }
    public CmsMimetype(BigDecimal id, CmsCeSubtype cmsCeSubtype, String name, String mimetype, boolean binary, String extension, boolean usesRelativeLinks, BigDecimal createTs, BigDecimal lastmodifyTs, boolean indexable, Set<CmsFileContent> cmsFileContents) {
       this.id = id;
       this.cmsCeSubtype = cmsCeSubtype;
       this.name = name;
       this.mimetype = mimetype;
       this.binary = binary;
       this.extension = extension;
       this.usesRelativeLinks = usesRelativeLinks;
       this.createTs = createTs;
       this.lastmodifyTs = lastmodifyTs;
       this.indexable = indexable;
       this.cmsFileContents = cmsFileContents;
    }
   
     @Id 

    
    @Column(name="ID", nullable=false, precision=20, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="CE_TYPE_NAME", referencedColumnName="CE_TYPE_NAME", nullable=false), 
        @JoinColumn(name="CE_SUBTYPE_NAME", referencedColumnName="NAME", nullable=false) } )
    public CmsCeSubtype getCmsCeSubtype() {
        return this.cmsCeSubtype;
    }
    
    public void setCmsCeSubtype(CmsCeSubtype cmsCeSubtype) {
        this.cmsCeSubtype = cmsCeSubtype;
    }

    
    @Column(name="NAME", nullable=false, length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="MIMETYPE", nullable=false, length=100)
    public String getMimetype() {
        return this.mimetype;
    }
    
    public void setMimetype(String mimetype) {
        this.mimetype = mimetype;
    }

    
    @Column(name="BINARY", nullable=false, precision=1, scale=0)
    public boolean isBinary() {
        return this.binary;
    }
    
    public void setBinary(boolean binary) {
        this.binary = binary;
    }

    
    @Column(name="EXTENSION", nullable=false, length=100)
    public String getExtension() {
        return this.extension;
    }
    
    public void setExtension(String extension) {
        this.extension = extension;
    }

    
    @Column(name="USES_RELATIVE_LINKS", nullable=false, precision=1, scale=0)
    public boolean isUsesRelativeLinks() {
        return this.usesRelativeLinks;
    }
    
    public void setUsesRelativeLinks(boolean usesRelativeLinks) {
        this.usesRelativeLinks = usesRelativeLinks;
    }

    
    @Column(name="CREATE_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getCreateTs() {
        return this.createTs;
    }
    
    public void setCreateTs(BigDecimal createTs) {
        this.createTs = createTs;
    }

    
    @Column(name="LASTMODIFY_TS", nullable=false, precision=20, scale=0)
    public BigDecimal getLastmodifyTs() {
        return this.lastmodifyTs;
    }
    
    public void setLastmodifyTs(BigDecimal lastmodifyTs) {
        this.lastmodifyTs = lastmodifyTs;
    }

    
    @Column(name="INDEXABLE", nullable=false, precision=1, scale=0)
    public boolean isIndexable() {
        return this.indexable;
    }
    
    public void setIndexable(boolean indexable) {
        this.indexable = indexable;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cmsMimetype")
    public Set<CmsFileContent> getCmsFileContents() {
        return this.cmsFileContents;
    }
    
    public void setCmsFileContents(Set<CmsFileContent> cmsFileContents) {
        this.cmsFileContents = cmsFileContents;
    }




}


